{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAK/BH,EAAKC,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAKN,IAHA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OACjBC,EAAYC,OAAOL,EAAMM,OAEpBC,EAAI,EAAGA,EAAIJ,EAAOG,MAAOC,IAChCC,EAAcD,EAAE,EAAGH,GAChBK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MACjBb,EAAAwB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANb,EAAM,UAE9Dc,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MAClBb,EAAAwB,OAAOI,QAAQ,sBAAqCF,OAAfH,EAAS,QAAYG,OAANb,EAAM,UAE9DG,GAAaC,OAAOH,EAAKI,OAI3B,SAASE,EAAcG,EAAUV,GAC/B,OAAO,IAAIgB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEP,WAAUV,UAEpBkB,EAAO,CAAER,WAAUV,YAEpBA,MAXPX,EAAKC,KAAKiC,S","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n};\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n  let delayStep = Number(delay.value);\n\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(i+1, delayStep)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayStep += Number(step.value);\n  }\n  refs.form.reset;\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay)\n    });\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","delay","step","amount","delayStep","Number","value","i","createPromise","then","param","position","Notify","success","concat","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","reset"],"version":3,"file":"03-promises.efd17c8e.js.map"}